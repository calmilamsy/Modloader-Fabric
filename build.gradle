buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            name = "Fabric"
            url = "https://maven.fabricmc.net/"
        }
        maven {
            name = "Forge"
            url = "https://files.minecraftforge.net/maven/"
        }
        maven {
            name = "Jitpack"
            url = "https://jitpack.io/"
        }
    }
    dependencies {
        //SinÂ² Edition Loom
        classpath 'com.github.js6pak:fabric-loom:beta_mcp-SNAPSHOT'
    }
}

subprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'fabric-loom'

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

    archivesBaseName = project.archives_base_name
    version = project.mod_version
    group = project.maven_group

    repositories {
        mavenLocal()
        maven {
            name = 'Jitpack'
            url = 'https://jitpack.io/'
        }
    }

    dependencies {
//        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
        modImplementation 'com.github.js6pak:fabric-loader:fix~beta-server-version-SNAPSHOT' // temporary fix for b1.7.3 server version parsing

        compile 'com.google.code.gson:gson:2.8.6'
        compile 'com.google.guava:guava:28.2-jre'
        compile 'commons-io:commons-io:2.5'
        compile 'org.apache.commons:commons-lang3:3.9'
        compile 'org.apache.logging.log4j:log4j-api:2.13.0'
        compile 'org.apache.logging.log4j:log4j-core:2.13.0'

        compileOnly 'org.projectlombok:lombok:1.18.12'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'

        compile 'com.github.js6pak:Tiny-Remapper:master-SNAPSHOT'
    }

    minecraft {
        customManifest = "https://gist.githubusercontent.com/js6pak/d02e251fa888cbd89ca958ae7007a207/raw/5154f0161c9bb6149fc876c508da3f4544fdd140/b1.7.3-server.json"
    }

    processResources {
        inputs.property "version", project.version

        from(sourceSets.main.resources.srcDirs) {
            include "fabric.mod.json"
            expand "version": project.version
        }

        from(sourceSets.main.resources.srcDirs) {
            exclude "fabric.mod.json"
        }
    }

    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this task, sources will not be generated.
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = "sources"
        from sourceSets.main.allSource
    }

    jar {
        from "LICENSE"
    }

    remapJar {
        toMappings = 'official'
    }

    // configure the maven publication
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = "modloader-${project.getName()}"
                // add all the jars that should be included when publishing to maven
                artifact(remapJar) {
                    builtBy remapJar
                }
                artifact(jar) {
                    builtBy jar
                }
                artifact(sourcesJar) {
                    builtBy remapSourcesJar
                }
            }
        }

        // select the repositories you want to publish to
        repositories {
            // uncomment to publish to the local maven
            mavenLocal()
        }
    }
}